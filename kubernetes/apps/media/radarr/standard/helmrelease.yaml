---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr-standard
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: volsync-system

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      radarr-standard:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-deps:
            image:
              repository: alpine:3.19
              tag: latest

            command:
              - /bin/sh
              - -c
              - |
                echo "Downloading static binaries..."

                # Install wget if not present
                apk add --no-cache wget

                # Download static jq
                echo "Downloading jq..."
                wget -O /deps/jq https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64
                chmod +x /deps/jq

                # Download static ffmpeg (from John Van Sickle's builds)
                echo "Downloading ffmpeg..."
                wget -O /tmp/ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
                tar -xf /tmp/ffmpeg.tar.xz -C /tmp
                mv /tmp/ffmpeg-*-amd64-static/ffmpeg /deps/ffmpeg
                mv /tmp/ffmpeg-*-amd64-static/ffprobe /deps/ffprobe
                chmod +x /deps/ffmpeg /deps/ffprobe
                rm -rf /tmp/ffmpeg*

                # Download static dovi_tool
                echo "Downloading dovi_tool..."
                wget -O /tmp/dovi_tool.tar.gz https://github.com/quietvoid/dovi_tool/releases/download/2.1.2/dovi_tool-2.1.2-x86_64-unknown-linux-musl.tar.gz
                tar -xzf /tmp/dovi_tool.tar.gz -C /deps/
                chmod +x /deps/dovi_tool
                rm /tmp/dovi_tool.tar.gz

                echo "All static binaries downloaded successfully!"
                ls -lh /deps/

            securityContext:
              runAsUser: 0
              runAsNonRoot: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false

        containers:
          app:
            image:
              repository: ghcr.io/heavybullets8/radarr
              tag: 5.28.0.10274@sha256:b6fe556f508a4d2145b63efcfd06718c51529349ab872a9d2feb9c8deae00ebb

            env:
              RADARR__APP__INSTANCENAME: "Radarr Standard"
              PATH: /deps:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              TZ: ${TIMEZONE}

            envFrom:
              - secretRef:
                  name: radarr-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources:
              requests:
                cpu: 100m
                memory: 512Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    service:
      app:
        controller: *app
        annotations:
          lbipam.cilium.io/ips: 192.168.10.113
        ports:
          http:
            port: *port

    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: *app

      scripts:
        type: configMap
        name: radarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/tag_dvfelmel.sh
            subPath: tag_dvfelmel.sh
            readOnly: true
          - path: /scripts/scripts.conf
            subPath: scripts.conf
            readOnly: true
          - path: /scripts/99-install-dependencies.sh
            subPath: 99-install-dependencies.sh
            readOnly: true

      tmp:
        type: emptyDir
        medium: Memory

      deps:
        type: emptyDir
        globalMounts:
          - path: /deps

      data:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/rust/data
        globalMounts:
          - path: /data
            readOnly: false
