---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: daps
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: plex
      namespace: media
    - name: kometa
      namespace: media
    - name: openebs
      namespace: openebs-system
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      daps:
        type: &type cronjob
        cronjob: &cronjob
          schedule: "05 1,7,10,14,17 * * *"
          timeZone: &timeZone ${TIMEZONE}
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app: &container_app
            image:
              repository: ghcr.io/drazzilb08/daps
              tag: v2.0.0@sha256:6a0879aeab34d1b55b65e1cdc5a1b93534b764104449043d5c979b4e0decead5
            command:
              - /bin/sh
              - -c
            args:
              - |
                export RCLONE_CONFIG="/config/rclone.conf"
                python3 /app/main.py poster_renamerr
                python3 /app/main.py health_checkarr
            env:
              TZ: *timeZone
              PUID: 568
              PGID: 568
            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 5Gi

      unmatched-assets:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "15 9 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                export RCLONE_CONFIG="/config/rclone.conf"
                python3 /app/main.py unmatched_assets

      upgradinatorr:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "30 */3 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                export RCLONE_CONFIG="/config/rclone.conf"
                python3 /app/main.py upgradinatorr

      renameinatorr:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "5 1 */7 * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 /app/main.py renameinatorr

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always

    persistence:
      config:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /config

      posters:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/rust/posters
        globalMounts:
          - path: /posters
            readOnly: false

      assets:
        type: persistentVolumeClaim
        existingClaim: kometa-assets
        globalMounts:
          - path: /config/assets

      config-file:
        type: secret
        name: daps-secret
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
            readOnly: true

      # sa-file:
      #   type: secret
      #   name: daps-sa-secret
      #   globalMounts:
      #     - path: /config/sa.json
      #       subPath: sa.json
      #       readOnly: true

      process:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /config/process
