---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kometa
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: plex
      namespace: media
    - name: openebs
      namespace: openebs-system
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      main:
        type: &type cronjob
        cronjob: &cronjob
          schedule: "4 4 * * *"
          timeZone: &timeZone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app: &container_app
            image:
              repository: kometateam/kometa
              tag: develop@sha256:e538eaa8caf40856c13aa82eef37efbb8026e7451e19cd90db7e957f0d811c3f
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --run --read-only-config
            env:
              TZ: *timeZone
              KOMETA_CONFIG: /config/config.yaml
            envFrom:
              - secretRef:
                  name: kometa-secret
            resources:
              requests:
                cpu: 10m
                memory: 16Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            # lifecycle:
            #   postStart:
            #     exec:
            #       command: ["/bin/bash", "-c", "mkdir -p /config/assets/{anime,awards,decades,genres,holidays,networks,suggestions,posters}"]

      # anime:
      #   type: *type
      #   cronjob:
      #     <<: *cronjob
      #     schedule: "0 9 * * *"
      #   containers:
      #     app:
      #       <<: *container_app
      #       args:
      #         - |
      #           python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Animeserier|Animefilmer"

      # kids:
      #   type: *type
      #   cronjob:
      #     <<: *cronjob
      #     schedule: "0 1 * * *"
      #   containers:
      #     app:
      #       <<: *container_app
      #       args:
      #         - |
      #           python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Barnfilmer|Barnserier"

      standard-series:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "35 19 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Serier"

      standard-movies:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "30 16 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Filmer"

      sport:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "0 7,17 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Sport"

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always

    persistence:
      assets:
        existingClaim: kometa-assets
        globalMounts:
          - path: /config/assets

      config:
        existingClaim: *app

      config-file:
        type: configMap
        name: kometa-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs

      custom-configs:
        type: configMap
        name: kometa-custom-configs
        globalMounts:
          - path: /config/best-of.yaml
            subPath: best-of.yaml
            readOnly: true
          - path: /config/movies_collections.yaml
            subPath: movies_collections.yaml
            readOnly: true
          - path: /config/series_collections.yaml
            subPath: series_collections.yaml
            readOnly: true
